{"version":3,"sources":["Assets/Resume/MJB_Resume_v4.1.pdf","Components/components/Navbar/index.js","Components/components/Navbar/navbar.js","Components/components/Jumbotron/index.js","Components/components/Jumbotron/jumbotron.js","Components/Pages/Home/Home.js","Components/Utils/API.js","Components/components/List/list.js","Components/components/Card/index.js","Components/components/Card/Card.js","Components/components/List/listVanilla.js","Components/components/Button/index.js","Components/components/Button/button.js","Components/components/List/ListElement.js","Components/components/Grid/Col.js","Components/components/Grid/Container.js","Components/components/Grid/Row.js","Components/Pages/Project/Projects.js","Components/Pages/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Jumbotron","props","title","lead","gate","role","resume","target","Books","React","Component","API","gitRepos","console","log","axios","get","List","children","Card","class","src","image","alt","link","description","listVanilla","Button","cardElement","buttonLink","Col","_ref","size","split","map","join","Container","fluid","concat","Row","projectsArray","Projects","state","repos","loadRepos","then","res","_this","setState","data","catch","err","this","components_List_listVanilla","repo","components_Card","List_list","ListElement","repoLink","repoTitle","App","react_router_dom","components_Navbar","react_router","exact","path","component","Home","About","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d26c3e5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MJB_Resume_v4.1.5f0b2989.pdf\";","import Navbar from \"./navbar\"\r\n\r\nexport default Navbar","import React from \"react\"\r\nimport \"./navbar.css\"\r\n\r\nlet Navbar = function(){\r\nreturn (<nav className=\"navbar navbar-expand-lg navbar-light\">\r\n    <a className=\"navbar-brand\" >Menu</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About Me</a>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/projects\">Projects</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/contact\">Contact</a>\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  </nav>);\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import Jumbotron from './jumbotron'\r\n\r\nexport default Jumbotron;","import React from 'react'\r\nimport resume from '../../../Assets/Resume/MJB_Resume_v4.1.pdf'\r\n\r\nlet Navbar = function(props){\r\n\r\n\r\nreturn(\r\n\r\n  <div className=\"row\">\r\n    <div className=\"container-fluid\">\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-3\">{props.title}</h1>\r\n        <p className=\"lead\">{props.lead}</p>\r\n        <hr className=\"my-2\"/>\r\n        <p>{props.gate}</p>\r\n        <p className=\"lead\">\r\n          <a className=\"btn btn-primary btn-lg\" href=\"projects\" role=\"button\" id = \"projectButton\">Projects</a>\r\n          <a className=\"btn btn-primary btn-lg\" href={resume} role=\"button\" id = \"projectButton\" target = \"_blank\">Resume</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n)}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport Jumbotron from '../../components/Jumbotron'\r\nimport \"./Home.css\"\r\n\r\nlet homeTitle = \"Hi, I'm Mitch!\"\r\nlet homeLead = \"I'm a software developer with strong critical thinking skills and interest in efficient design.\"\r\nlet homeGate = \"Please feel free to browse my work\"\r\n\r\nclass Books extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            //homepage is just gonna be this jumbotron; I want use to be extremely simple and easy\r\n            //I can add some more information about my skillset eventually.\r\n            < Jumbotron title = {homeTitle} lead = {homeLead} gate = {homeGate}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Books;","import axios from 'axios'\r\n\r\nexport default{\r\n    gitRepos: function() {\r\n         console.log(\"route called\")\r\n         return axios.get(\"http://localhost:3001/api/repos\")\r\n    },\r\n}","import React from 'react'\r\nimport \"./list.css\"\r\n\r\n\r\nlet List = function (props) {\r\n    return (\r\n            <div className=\"list-overflow-container\">\r\n            <h3 className = \"listTitle\">All Projects</h3>\r\n                <ul className=\"list-group list-group-flush\">{props.children}</ul>\r\n            </div>)\r\n}\r\n\r\nexport default List","import Card from \"./Card\";\r\n\r\nexport default Card;","import React from \"react\"\r\nimport \"./Card.css\"\r\n\r\nlet Card = function (props) {\r\n\r\n    return (\r\n        <div class=\"card mb-3\">\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-md-8\">\r\n                        <img src={props.image} class=\"card-img\" alt=\"...\" ></img>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"card-body\">\r\n                        <a href={props.link}><h5>{props.title}</h5></a>\r\n                        <p class=\"card-text\">{props.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport \"./listVanilla.css\"\r\n\r\nlet listVanilla = function (props) {\r\n    return (\r\n            <div className = \"listVanilla\">\r\n            <h3 className = \"listTitle\">{props.title}</h3>\r\n                <ul className=\"list-group\">{props.children}</ul>\r\n            </div>)\r\n}\r\n\r\nexport default listVanilla;","import React from 'react'\r\nimport Button from './button'\r\n\r\nexport default Button;","import React from 'react'\r\n\r\n\r\nlet button = function(props){\r\n\r\n    return (<a class=\"btn btn-primary btn-lg\" href={props.link} role=\"button\" id = \"projectButton\">{props.title}</a>)\r\n}\r\n\r\nexport default button","import React from 'react'\r\nimport Button from '../Button'\r\nimport \"./listElement.css\"\r\n\r\n\r\nlet cardElement = function (props) {\r\n    return (\r\n        <div>\r\n            <li className=\"list-group-item\" >\r\n                {props.children}\r\n                <Button link={props.buttonLink} title=\"Checkout the project\" />\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cardElement\r\n\r\n\r\n","import React from \"react\";\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from 'react'\r\nimport API from '../../Utils/API';\r\nimport List from '../../components/List/list'\r\nimport Card from '../../components/Card'\r\nimport ListVanilla from \"../../components/List/listVanilla\"\r\nimport ListElement from '../../components/List/ListElement'\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport projectRepos from \"../../../Assets/projectRepos.json\"\r\nimport \"./Project.css\"\r\n\r\n\r\nlet projectsArray = [\r\n    {\r\n        \"title\": \"The Mealler Report\",\r\n        \"link\": \"https://github.com/TashaShrader/MealSuggestions\",\r\n        \"image\": \"https://raw.githubusercontent.com/medcoguy/GitTesting/master/images/login.PNG\",\r\n        description: \"This application takes meals that somebody has eaten, store them in a database, and then makes nutritional suggestions for the day.\"\r\n    },\r\n    {\r\n        \"title\": \"Quick Recipes\",\r\n        \"link\": \"https://github.com/Lgeoffrion/GroupProject1\",\r\n        \"image\": \"https://raw.githubusercontent.com/Lgeoffrion/GroupProject1/master/assets/images/appFace.png\",\r\n        description: \"This application takes in ingredients or recipes, and then offers recipe suggestions and wines to pair with the given input.\"\r\n\r\n    },\r\n    {\r\n        \"title\": \"Chores\",\r\n        \"link\": \"https://github.com/mitburr/chores\",\r\n        \"image\":\"https://user-images.githubusercontent.com/46298501/54443544-cc0c8e80-470e-11e9-97f2-ba0a5a9bc2b2.png\",\r\n        description: \"Chores aims to create a chore tracking application for a family. Parents and children make accounts, and parents assign and manage chores for each child.\"\r\n    }\r\n]\r\n\r\n\r\nclass Projects extends React.Component {\r\n    //repos will be the array of objects representing every repo. I will want to filter it to display more reasonably.\r\n    state = {\r\n        repos: []\r\n    }\r\n    //display all repos on load\r\n    //I'll filter what this does later -- ideally I'd first show projects I'm proud of and have other projects be accessible differently. \r\n    //eventually I'll want to categorize the projects by technologies they showcase, difficulty, and completeness.\r\n    //I wonder if there's a way to do this programatically...\r\n    componentDidMount() {\r\n        this.loadRepos();\r\n    }\r\n\r\n\r\n\r\n    //fill the repo array\r\n    loadRepos = () => {\r\n        API.gitRepos().then(res => {\r\n            this.setState({ repos: res.data })\r\n            console.log(this.state.repos);\r\n        })\r\n            .catch(err => {\r\n                if (err) console.log(err);\r\n            })\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size = \"md\">\r\n                        <ListVanilla>\r\n                            {projectsArray.map(repo =>{\r\n                                return (\r\n                                    <Card link = {repo.link} title = {repo.title} image = {repo.image} description = {repo.description}></Card>\r\n                                )\r\n                            })}\r\n                        </ListVanilla>\r\n                    </Col>\r\n                    <Col size = \"sm\">\r\n                        <List className=\"list list-buffer\">\r\n                            {this.state.repos.map(repo => {\r\n                                return (\r\n                                    <ListElement buttonLink={repo.repoLink}>{repo.repoTitle}</ListElement>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </List>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Projects","import React from 'react'\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport \"./About.css\"\r\n\r\nclass Projects extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"sm\">\r\n                            soeoijf\r\n                    </Col>\r\n                        <Col size=\"sm\">\r\n                            dsfj\r\n                    </Col>\r\n                        <Col size=\"sm\">\r\n                            dsalfj\r\n                    </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Projects;","import React, { Component } from 'react';\nimport Navbar from './Components/components/Navbar';\nimport Home from './Components/Pages/Home/Home'\nimport Projects from './Components/Pages/Project/Projects'\nimport About from './Components/Pages/About/About'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/projects\" component={Projects} />\n            <Route exact path = \"/about\" component = {About} />\n          </Switch>\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}